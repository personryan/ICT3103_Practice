pipeline {
    agent any
	
	environment {
        // Define environment variables if needed
        SONARQUBE_SCANNER_HOME = tool 'sonarqube' // Name of your SonarQube scanner installation
    }
	tools {
        nodejs 'nodejs' // 'nodejs' is the name you've given the NodeJS installation in Jenkins
		dependencyCheck 'OWASP'
    }
    stages {
		stage('Install Dependencies') {
            steps {
				dir('my-search-app'){
					// Install the project dependencies from package.json
					sh 'npm install'
				}                
            }
        }
        stage('Integration & UI testing') {
            steps {
				dir('my-search-app'){
				// Run integration tests				
                sh 'echo "Run your integration & UI tests here"'
                // For example, if you use npm, you might run `npm test`
				sh 'npm test'
				}                
            }
        }
        stage('OWASP Dependency Check') {
            steps {
                // Running the OWASP Dependency-Check
                dependencyCheckPublisher pattern: '**/dependency-check-report.*'
            }
        }
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
        success {
            // Actions to perform if the pipeline succeeds
            echo 'The pipeline succeeded!'
        }
        failure {
            // Actions to perform if the pipeline fails
            echo 'The pipeline failed!'
        }
    }
}
